name: "Build, Test and Upload"

on:
  workflow_call:
    inputs:
      upload-artifacts:
        type: boolean
        default: false
      artifact-retention:
        type: number
        default: 0
      publish-to-maven:
        type: boolean
        default: false
      maven-url:
        type: string
        required: false
      maven-user:
        type: string
        required: false
      java-version:
        type: number
        default: 17
      java-distribution:
        type: string
        default: "temurin"
      release-type:
        type: string
        default: "snapshot"
      check-datagen:
        type: boolean
        default: true
      datagen-folder:
        type: string
        default: ""

    secrets:
      MAVEN_PASSWORD:
        required: false
      GRADLE_ENCRYPTION_KEY:
        required: false

    outputs:
      modid:
        value: ${{ jobs.build.outputs.modid }}
      version:
        value: ${{ jobs.build.outputs.version }}
      summary:
        value: ${{ jobs.build.outputs.summary }}


jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    env:
      RELEASE_TYPE: ${{ inputs.release-type }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set up JDK ${{ inputs.java-version }}"
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: "Setup Build"
        run: chmod 777 gradlew

      - name: "Setup Gradle"
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Setup outputs from Gradle"
        id: setup
        run: ./gradlew setupGitHubActions

      - name: "Build with Gradle"
        id: build
        run: ./gradlew build

      - name: "Test with Gradle"
        id: test
        run: ./gradlew runGameTestServer --no-configuration-cache

      - name: "Run datagen with Gradle"
        if: ${{ inputs.check-datagen }}
        id: datagen
        run: ./gradlew runData --no-configuration-cache

      - name: "Check for datagen Changes"
        if: ${{ inputs.check-datagen }}
        id: check-data
        run: |
          changes_diff=$(git diff --ignore-space-at-eol --text ${{ inputs.datagen-folder }} | wc -l)
          changes_status=$(git status --porcelain ${{ inputs.datagen-folder }} | wc -l)
          changes=$(( $changes_diff + $changes_status ))
          if [ "$changes" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff --ignore-space-at-eol --text ${{ inputs.datagen-folder }}
            git status ${{ inputs.datagen-folder }}
            exit 1
          fi

      - name: "Publish with Gradle"
        if: ${{ inputs.publish-to-maven }}
        id: publish
        env:
          MAVEN_URL: ${{ inputs.maven-url }}
          MAVEN_USER: ${{ inputs.maven-user }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: ./gradlew publish

      - name: "Read summary"
        id: summary
        uses: juliangruber/read-file-action@v1
        with:
          path: summary.txt

      - name: "Upload Build Artifacts"
        uses: actions/upload-artifact@v4
        if: ${{ inputs.upload-artifacts }}
        with:
          name: build-artifacts
          path: build/libs/
          if-no-files-found: error
          retention-days: ${{ inputs.artifact-retention }}

      - name: "Upload Changelog"
        uses: actions/upload-artifact@v4
        if: ${{ inputs.upload-artifacts }}
        with:
          name: changelog
          path: changelog.md
          if-no-files-found: error

    outputs:
      modid: ${{ steps.setup.outputs.modid }}
      version: ${{ steps.setup.outputs.version }}
      mc_version: ${{ steps.setup.outputs.mc_version }}
      summary: ${{ steps.summary.outputs.content }}
